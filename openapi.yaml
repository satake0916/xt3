openapi: 3.0.2

info:
  title: XT3 API
  version: 0.0.1

servers:
  - url: 'http://localhost:8080'
    description: 'Local Environment'

paths:
  /v1/login:
    post:
      tags:
        - login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthForm'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRes'
        '401':
          description: login failure
  /v1/tweets:
    get:
      tags:
        - tweets
      summary: Get all tweets
      description: Returns all tweets. This api is for debug.
      parameters:
        - name: count
          in: query
          description: The number of tweets to return
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 30
        - name: maxId
          in: query
          description: Returns tweets with ids lower than or equal to this
          schema:
            type: string
        - name: sinceId
          in: query
          description: Returns tweets with ids upper than or equal to this
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTweetsRes'
        '403':
          description: please login
    post:
      tags:
        - tweets
      summary: Post a tweet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TweetReq'
      responses:
        '201':
          description: success
        '403':
          description: please login
        '5XX':
          description: internal server error
  /v1/tweets/{tweetId}:
    get:
      tags:
        - tweets
      summary: Get tweet by ID
      description: Returns a tweet
      parameters:
        - name: tweetId
          in: path
          description: ID of tweet to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTweetsByTweetIdRes'
        '400':
          description: no tweet
        '403':
          description: please login
        '404':
          description: tweet not found
  /v1/statuses/account-timeline/{accountId}:
    get:
      tags:
        - statuses
      summary: Get timeline of the account
      parameters:
        - name: accountId
          in: path
          description: ID of account has tweets to return
          required: true
          schema:
            type: string
        - name: count
          in: query
          description: The number of tweets to return
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 30
        - name: maxId
          in: query
          description: Returns tweets with ids lower than or equal to this
          schema:
            type: string
        - name: sinceId
          in: query
          description: Returns tweets with ids upper than or equal to this
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTweetsRes'
        '403':
          description: please login
  /v1/accounts/{accountId}:
    get:
      tags:
        - accounts
      summary: Get account by ID
      description: Returns an account information
      parameters:
        - name: accountId
          in: path
          description: ID of account to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountRes'
        '400':
          description: no account id
        '403':
          description: please login
        '404':
          description: account not found
  /v1/accounts/{accountId}/tweets:
    get:
      tags:
        - accounts
      summary: Get tweets of the account
      parameters:
        - name: accountId
          in: path
          description: ID of account has tweets to return
          required: true
          schema:
            type: string
        - name: count
          in: query
          description: The number of tweets to return
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 30
        - name: maxId
          in: query
          description: Returns tweets with ids lower than or equal to this
          schema:
            type: string
        - name: sinceId
          in: query
          description: Returns tweets with ids upper than or equal to this
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTweetsRes'
        '403':
          description: please login
  /v1/accounts/{accountId}/following:
    get:
      tags:
        - accounts
      summary: Get accounts followed by the account
      parameters:
        - name: accountId
          in: path
          description: ID of account has tweets to return
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: The max number of accounts to return
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 30
        - name: offset
          in: query
          description: The relative positoin
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountsRes'
    post:
      tags:
        - accounts
      summary: the path account Follow the body account
      parameters:
        - name: accountId
          in: path
          description: ID of account has tweets to return
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowingReq'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowingRes'
  /v1/users/{userId}:
    get:
      tags:
        - users
      summary: Get user and their accounts by user id
      description: Returns an user information and their accounts information
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithAccountsRes'

components:
  schemas:
    TweetReq:
      required:
        - tweetText
        - accountId
      type: object
      properties:
        tweetText:
          type: string
          example: Now Tweet!
        accountId:
          type: string
          example: 1
    TweetRes:
      required:
        - tweetId
        - tweetText
        - accountId
        - accountName
        - displayName
        - createdAt
      type: object
      properties:
        tweetId:
          type: string
          example: 20
        tweetText:
          type: string
          example: just setting up my twttr
        accountId:
          type: string
          example: 1
        accountName:
          type: string
          example: jake
        displayName:
          type: string
          example: Jake
        createdAt:
          type: string
          format: date-time
    GetTweetsRes:
      required:
        - total
        - tweets
      type: object
      properties:
        total:
          type: integer
          example: 10
        tweets:
          type: array
          items:
            $ref: '#/components/schemas/TweetRes'
    GetTweetsByTweetIdRes:
      required:
        - data
        - include
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TweetRes'
        include:
          type: array
          items:
            $ref: '#/components/schemas/TweetRes'
    AccountRes:
      required:
        - accountId
        - displayName
        - accountName
        - profileDescription
        - isPrimary
      type: object
      properties:
        accountId:
          type: string
          example: 1
        displayName:
          type: string
          example: Jack
        accountName:
          type: string
          example: jack
        profileDescription:
          type: string
          example: bitcoin and chill
        profileImageUrl:
          type: string
          example: https://example.com/profile_image.jpg
        isPrimary:
          type: boolean
    GetAccountsRes:
      required:
        - total
        - accounts
      type: object
      properties:
        total:
          type: integer
          example: 10
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountRes'
    FollowingReq:
      required:
        - followedId
      type: object
      properties:
        followingId:
          type: string
          example: 1
        followedId:
          type: string
          example: 2
    FollowingRes:
      required:
        - following
      type: object
      properties:
        following:
          type: boolean
          example: true
    AuthForm:
      required:
        - email
        - pass
      type: object
      properties:
        email:
          type: string
          example: user@example.com
        pass:
          type: string
          example: pass1234
    UserRes:
      required:
        - userId
      type: object
      properties:
        userId:
          type: string
    UserWithAccountsRes:
      required:
        - data
        - include
      type: object
      properties:
        data:
          $ref: "#/components/schemas/UserRes"
        include:
          type: array
          items:
            $ref: "#/components/schemas/AccountRes"
